<?xml version="1.0" encoding="utf-8" ?>
<configuration>
  <configSections>
    <section name="default" type="System.Configuration.DictionarySectionHandler,System,Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"/>
    <section name="unity" type="Microsoft.Practices.Unity.Configuration.UnityConfigurationSection,Microsoft.Practices.Unity.Configuration"/>
    <section name="log4net" type="log4net.Config.Log4NetConfigurationSectionHandler, log4net"/>
  </configSections>

  <appSettings>
    <!--Enable/Disable log4nwt debugging -->
    <add key="log4net.Internal.Debug" value="true" />
  </appSettings>
  <!--Enable / Disable Log4net internal error log-->
  <system.diagnostics>
    <trace autoflush="true">
      <listeners>
        <add
          name="textWriterTraceListener"
          type="System.Diagnostics.TextWriterTraceListener"
          initializeData="C:\tmp\log4net.txt" />
      </listeners>
    </trace>
  </system.diagnostics>
  <!--Log4net - Configuration-->

  <log4net debug="True">
    <!--Log4net - File Logger configuration-->
    <!--<appender name="FileAppender" type="log4net.Appender.RollingFileAppender">
      -->
    <!--Log file path-->
    <!--
      <file value="C:\Users\Shyam.singh\Desktop\TPG.SoftwareFactory\TPG.SoftwareFactory\ConsoleClient\Logs\AppLog.log"/>
      <appendToFile value="true"/>
      <lockingModel type="log4net.Appender.FileAppender+MinimalLock"/>
      <rollingStyle value="Date"/>
      <datePattern value="yyyyMMdd"/>
      <maxSizeRollBackups value="10"/>
      <maximumFileSize value="10MB"/>
      <staticLogFileName value="true"/>
      <threshold value="ALL"/>
      <layout type="log4net.Layout.PatternLayout">
        <conversionPattern value="%d{yyyy-MM-dd HH:mm:ss} %logger %-5level %message%newline"/>
      </layout>
    </appender>
    <logger name="FileAppender">
      <appender-ref ref="FileAppender"/>
    </logger>-->

    <appender name="ADONetAppender" type="log4net.Appender.ADONetAppender">
      <bufferSize value="100" />
      <connectionType value="System.Data.SqlClient.SqlConnection, System.Data, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
      <connectionString value="server=NDI-LAP-156\MS_SQLSERVER2008; uid=sa; pwd=Brick@123; database=AustData" />
      <commandText value="INSERT INTO ACPLog ([Thread],[Level],[Logger],[Message]) VALUES (@thread, @log_level, @logger, @message)" />
      <parameter>
        <parameterName value="@thread"/>
        <dbType value="String"/>
        <size value="50"/>
        <layout type="log4net.Layout.PatternLayout">
          <conversionPattern value="%thread"/>
        </layout>
      </parameter>
      <parameter>
        <parameterName value="@log_level"/>
        <dbType value="String"/>
        <size value="50"/>
        <layout type="log4net.Layout.PatternLayout">
          <conversionPattern value="%level"/>
        </layout>
      </parameter>
      <parameter>
        <parameterName value="@logger"/>
        <dbType value="String"/>
        <size value="50"/>
        <layout type="log4net.Layout.PatternLayout">
          <conversionPattern value="%logger"/>
        </layout>
      </parameter>
      <parameter>
        <parameterName value="@message"/>
        <dbType value="String"/>
        <size value="50"/>
        <layout type="log4net.Layout.PatternLayout">
          <conversionPattern value="%message"/>
        </layout>
      </parameter>
    </appender>
    <logger name="Appender">
      <appender-ref ref="ADONetAppender"/>
    </logger>
  </log4net>

  <unity>
    <typeAliases>
      <!--Lifetime manager types-->
      <typeAlias alias="singleton" type="Microsoft.Practices.Unity.ContainerControlledLifetimeManager,Microsoft.Practices.Unity"/>
      <typeAlias alias="external" type="Microsoft.Practices.Unity.ExternallyControlledLifetimeManager,Microsoft.Practices.Unity"/>
      <!--Custom object types-->
      <typeAlias alias="ILogger" type="TPG.SoftwareFactory.Contract.ILogger, TPG.SoftwareFactory.Contract"/>
      <typeAlias alias="Log4NetLogger" type="TPG.SoftwareFactory.Log4Net.Log4NetLogger, TPG.SoftwareFactory.Log4Net"/>
      <typeAlias alias="ServiceLogger" type="TPG.SoftwareFactory.Service.ServiceLogger, TPG.SoftwareFactory.Service"/>
    </typeAliases>
    <containers>
      <container name="LoggerContainer">
        <types>
          <type type="ILogger" mapTo="ServiceLogger">
            <lifetime type="singleton"/>
          </type>
        </types>
      </container>
    </containers>
  </unity>
  <system.web>
    <compilation debug="true" />
  </system.web>
  <!-- When deploying the service library project, the content of the config file must be added to the host's 
  app.config file. System.Configuration does not support config files for libraries. -->
  <system.serviceModel>
    <services>
      <service name="TPG.SoftwareFactory.QueueEngine.QueueEngine">
        <endpoint address="httpQueue" binding="basicHttpBinding" bindingConfiguration=""
          contract="TPG.SoftwareFactory.Contract.IQueueEngine" />
        <endpoint binding="netTcpBinding" name="netTcp" contract="TPG.SoftwareFactory.Contract.IQueueEngine" />
        <endpoint address="mexQueue" binding="mexTcpBinding" name="metaQueue"
          contract="IMetadataExchange" />
        <host>
          <baseAddresses>
            <add baseAddress="http://NDI-LAP-156/QueueService" />
          </baseAddresses>
        </host>
      </service>
      <service name="TPG.SoftwareFactory.Services.LoggerService">
        <endpoint address="http" binding="basicHttpBinding" bindingConfiguration=""
          contract="TPG.SoftwareFactory.Contract.ILogger" />
        <endpoint binding="mexHttpBinding" bindingConfiguration="" name="meta"
          contract="IMetadataExchange" />
        <host>
          <baseAddresses>
            <add baseAddress="http://NDI-LAP-156/service" />
          </baseAddresses>
        </host>
      </service>
      <service name="TPG.SoftwareFactory.Services.Service1">
        <endpoint address="" binding="wsHttpBinding" contract="TPG.SoftwareFactory.Services.IService1">
          <identity>
            <dns value="localhost" />
          </identity>
        </endpoint>
        <endpoint address="mex" binding="mexHttpBinding" contract="IMetadataExchange" />
        <host>
          <baseAddresses>
            <add baseAddress="http://localhost:8732/Design_Time_Addresses/TPG.SoftwareFactory.Services/Service1/" />
          </baseAddresses>
        </host>
      </service>
    </services>
    <behaviors>
      <serviceBehaviors>
        <behavior>
          <!-- To avoid disclosing metadata information, 
          set the value below to false and remove the metadata endpoint above before deployment -->
          <serviceMetadata httpGetEnabled="True"/>
          <!-- To receive exception details in faults for debugging purposes, 
          set the value below to true.  Set to false before deployment 
          to avoid disclosing exception information -->
          <serviceDebug includeExceptionDetailInFaults="False" />
        </behavior>
      </serviceBehaviors>
    </behaviors>
  </system.serviceModel>

</configuration>
