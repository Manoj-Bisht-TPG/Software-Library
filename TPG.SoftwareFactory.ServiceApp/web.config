<?xml version="1.0"?>
<configuration>
  <configSections>
    <section name="default" type="System.Configuration.DictionarySectionHandler,System,Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"/>
    <section name="unity" type="Microsoft.Practices.Unity.Configuration.UnityConfigurationSection,Microsoft.Practices.Unity.Configuration"/>
    <section name="log4net" type="log4net.Config.Log4NetConfigurationSectionHandler, log4net"/>
  </configSections>
  <appSettings>
    <!--Enable/Disable log4nwt debugging -->
    <add key="log4net.Internal.Debug" value="true"/>
  </appSettings>
  <!--Enable / Disable Log4net internal error log-->
  <system.diagnostics>
    <trace autoflush="true">
      <listeners>
        <add name="textWriterTraceListener" type="System.Diagnostics.TextWriterTraceListener" initializeData="C:\tmp\log4net.txt"/>
      </listeners>
    </trace>
  </system.diagnostics>
  <log4net debug="True">
    <appender name="ADONetAppender" type="log4net.Appender.ADONetAppender">
      <bufferSize value="100" />
      <connectionType value="System.Data.SqlClient.SqlConnection, System.Data, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
      <connectionString value="server=NDI-LAP-156; uid=sa; pwd=India@123; database=POCDB" />
      <commandText value="INSERT INTO ACPLog ([Thread],[Level],[Logger],[Message],[LogDate],[ApplicationName],[HostName],[Exception]) VALUES (@thread, @log_level, @logger,@message,@log_Date,@applicationname,@hostName,@exception)" />
      <parameter>
        <parameterName value="@thread"/>
        <dbType value="String"/>
        <size value="50"/>
        <layout type="log4net.Layout.PatternLayout">
          <conversionPattern value="%thread"/>
        </layout>
      </parameter>

      <parameter>
        <parameterName value="@exception" />
        <dbType value="String" />
        <size value="2000" />
        <layout type="log4net.Layout.ExceptionLayout" />
      </parameter>

      <parameter>
        <parameterName value="@log_level"/>
        <dbType value="String"/>
        <size value="50"/>
        <layout type="log4net.Layout.PatternLayout">
          <conversionPattern value="%level"/>
        </layout>
      </parameter>

      <parameter>
        <parameterName value="@logger"/>
        <dbType value="String"/>
        <size value="50"/>
        <layout type="log4net.Layout.PatternLayout">
          <conversionPattern value="%logger"/>
        </layout>
      </parameter>

      <parameter>
        <parameterName value="@message"/>
        <dbType value="String"/>
        <size value="8000"/>
        <layout type="log4net.Layout.PatternLayout">
          <conversionPattern value="%message"/>
        </layout>
      </parameter>
      <parameter>
        <parameterName value="@log_date" />
        <dbType value="DateTime" />
        <layout type="log4net.Layout.RawTimeStampLayout" />
      </parameter>

      <parameter>
        <parameterName value="@applicationName"/>
        <dbType value="String"/>
        <size value="100"/>
        <layout type="log4net.Layout.PatternLayout">
          <conversionPattern value="%property{applicationName}"/>
        </layout>
      </parameter>

      <parameter>
        <parameterName value="@hostName"/>
        <dbType value="String"/>
        <size value="100"/>
        <layout type="log4net.Layout.PatternLayout">
          <conversionPattern value="%property{hostName}"/>
        </layout>
      </parameter>


      <!--
        <parameterName value="@exception"/>
        <dbType value="String"/>
        <size value="2000"/>
        <layout type="log4net.Layout.PatternLayout">
          <conversionPattern value="%%property{exception}"/>
        </layout>
      </parameter>

      
-->

    </appender>

    <logger name="Appender">
      <appender-ref ref="ADONetAppender"/>
    </logger>

  </log4net>

  <unity>
    <typeAliases>
      <!--Lifetime manager types-->
      <typeAlias alias="singleton" type="Microsoft.Practices.Unity.ContainerControlledLifetimeManager,Microsoft.Practices.Unity"/>
      <typeAlias alias="external" type="Microsoft.Practices.Unity.ExternallyControlledLifetimeManager,Microsoft.Practices.Unity"/>
      <!--Custom object types-->
      <typeAlias alias="ILogger" type="TPG.SoftwareFactory.Contract.ILogger, TPG.SoftwareFactory.Contract"/>
      <typeAlias alias="Log4NetLogger" type="TPG.SoftwareFactory.Log4Net.Log4NetLogger, TPG.SoftwareFactory.Log4Net"/>
      <typeAlias alias="ServiceLogger" type="TPG.SoftwareFactory.TPG.SoftwareFactory.Service.ServiceLogger, TPG.SoftwareFactory.Service"/>
    </typeAliases>
    <containers>
      <container name="LoggerContainer">
        <types>
          <type type="ILogger" mapTo="Log4NetLogger">
            <lifetime type="singleton"/>
          </type>
        </types>
      </container>
    </containers>
  </unity>

  <system.web>
    <compilation debug="true" targetFramework="4.0" />
  </system.web>

  <!--running code below-->
  <system.serviceModel>
    <services>
      <service name="TPG.SoftwareFactory.Service.ServiceLogger">
        <endpoint address="http://loggerservice" binding="webHttpBinding"
          bindingConfiguration="" name="webHttp" contract="TPG.SoftwareFactory.Contract.ILogger" />
        <endpoint address="mex" binding="mexHttpBinding" bindingConfiguration=""
          name="mex" contract="IMetadataExchange" />
      </service>
    </services>
    <diagnostics>
      <messageLogging logEntireMessage="true" logMalformedMessages="true" logMessagesAtServiceLevel="true" logMessagesAtTransportLevel="true"
            maxMessagesToLog="3000" />
    </diagnostics>
    <behaviors>
      <serviceBehaviors>
        <behavior>
          <serviceMetadata httpGetEnabled="true"/>
          <serviceDebug includeExceptionDetailInFaults="true" httpHelpPageEnabled="true"/>
        </behavior>
      </serviceBehaviors>
      <endpointBehaviors>
        <behavior name="AjaxBehavior">
          <enableWebScript />
        </behavior>
      </endpointBehaviors>
    </behaviors>
    <serviceHostingEnvironment  multipleSiteBindingsEnabled="true" />
  </system.serviceModel>
  <system.webServer>
    <modules runAllManagedModulesForAllRequests="true"  />
  </system.webServer>
</configuration>
